.info-container
  -if @user == current_user
    .changeable
      = form_for @user, url: avatar_path, html: { multipart: true }, method: :POST do |form|
        = form.file_field :avatar, id: "avatar"
        = image_tag @user.avatar.url(:medium)
        %br/
        = form.submit "Change avatar", class: "button-default ava-submit"
      #login
        = @user.login
      #login-form
        %input{type: "text"}
      %strong About:
      %pre#about
      #about-form
        %textarea
  -else
    = image_tag @user.avatar.url(:medium)
    #login
      = @user.login
    %strong About:
    %pre#about
-if @user == current_user
  .info-container
    #dowload-buttons-positioner
      #new-pic-button.download-button
        = image_tag("/assets/picture.png")
      #new-video-button.download-button
        = image_tag("/assets/tool.png")
    #new-pic.new-post
      = form_for PicPost.new(), url: new_pic_post_path, html: { multipart: true }, method: :post do |form|
        = form.text_field :title, placeholder: "Title"
        %br/
        = form.file_field :image, class: "inputfile"
        = form.label :image
        = form.text_field :definition, placeholder: "definition"
        %br/
        = form.submit "Post", class: "button-default"
    #new-video.new-post
      = form_for VideoPost.new(), url: new_video_post_path, method: :post do |form|
        = form.text_field :title, placeholder: "Title"
        %br/
        = form.text_field :link, placeholder: "Vimeo or Youtube link"
        %br/
        = form.text_field :definition, placeholder: "definition"
        %br/
        = form.submit "Post", class: "button-default"
.paginate        
  = will_paginate @posts
#posts
  -for post in @posts
    .post
      .ava-thumb
        = image_tag @user.avatar.url(:thumb)
      .info-container
        -if post.pic_post
          = link_to post.pic_post.title, post, class: "title"
          %br/
          = image_tag post.pic_post.image.url(:medium)
          %br/
          -if post.pic_post.definition != ""
            %p 
              = post.pic_post.definition
            %br/
        -if post.video_post
          - c = Conred::Video.new(video_url: post.video_post.link, width: 285, height: 185,error_message: "Video url is invalid")
          = link_to post.video_post.title, post, class: "title"
          %br/
          = c.code.html_safe
          %br/
          -if post.video_post.definition != ""
            %p 
              = post.video_post.definition
            %br/
        -if @user == current_user
          = link_to 'Destroy', post, method: :delete
.paginate
  = will_paginate @posts
